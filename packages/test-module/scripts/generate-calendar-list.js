#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

/**
 * Auto-generate the calendar list from the calendars directory
 * This script scans calendars/ and creates a TypeScript file with the list
 */

const calendarsDir = path.join(__dirname, '../calendars');
const outputDir = path.join(__dirname, '../src/generated');
const outputFile = path.join(outputDir, 'calendar-list.ts');

// Ensure the generated directory exists
if (!fs.existsSync(outputDir)) {
  fs.mkdirSync(outputDir, { recursive: true });
}

// Scan the calendars directory
const calendars = fs
  .readdirSync(calendarsDir)
  .filter(file => file.endsWith('.json') && file !== 'index.json') // Exclude index.json
  .map(file => file.replace('.json', ''))
  .sort(); // Keep them alphabetically sorted

// Generate TypeScript file with the list
const output = `/**
 * Auto-generated calendar list
 * 
 * This file is automatically generated by scripts/generate-calendar-list.js
 * Do not edit manually - it will be overwritten on next build
 * 
 * Generated on: ${new Date().toISOString()}
 * Found ${calendars.length} calendar(s): ${calendars.join(', ')}
 */

export const BUILT_IN_CALENDARS: string[] = ${JSON.stringify(calendars, null, 2)};
`;

// Write the generated file
fs.writeFileSync(outputFile, output);

console.log(`Generated calendar list with ${calendars.length} calendars:`);
calendars.forEach(cal => console.log(`  - ${cal}`));
console.log(`Written to: ${outputFile}`);
